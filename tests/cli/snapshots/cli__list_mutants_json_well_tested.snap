---
source: tests/cli/main.rs
expression: "String::from_utf8_lossy(&output.stdout)"
---
[
  {
    "file": "src/arc.rs",
    "function": {
      "function_name": "return_arc",
      "return_type": "-> Arc<String>"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Arc::new(String::new())"
  },
  {
    "file": "src/arc.rs",
    "function": {
      "function_name": "return_arc",
      "return_type": "-> Arc<String>"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Arc::new(\"xyzzy\".into())"
  },
  {
    "file": "src/inside_mod.rs",
    "function": {
      "function_name": "outer::inner::name",
      "return_type": "-> &'static str"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "\"\""
  },
  {
    "file": "src/inside_mod.rs",
    "function": {
      "function_name": "outer::inner::name",
      "return_type": "-> &'static str"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "\"xyzzy\""
  },
  {
    "file": "src/methods.rs",
    "function": {
      "function_name": "Foo::double",
      "return_type": ""
    },
    "genre": "FnValue",
    "line": 16,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "()"
  },
  {
    "file": "src/methods.rs",
    "function": {
      "function_name": "<impl Display for Foo>::fmt",
      "return_type": "-> fmt::Result"
    },
    "genre": "FnValue",
    "line": 22,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/methods.rs",
    "function": {
      "function_name": "<impl Debug for &Foo>::fmt",
      "return_type": "-> fmt::Result"
    },
    "genre": "FnValue",
    "line": 28,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/nested_function.rs",
    "function": {
      "function_name": "has_nested",
      "return_type": "-> u32"
    },
    "genre": "FnValue",
    "line": 1,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "0"
  },
  {
    "file": "src/nested_function.rs",
    "function": {
      "function_name": "has_nested",
      "return_type": "-> u32"
    },
    "genre": "FnValue",
    "line": 1,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "1"
  },
  {
    "file": "src/nested_function.rs",
    "function": {
      "function_name": "has_nested::inner",
      "return_type": "-> u32"
    },
    "genre": "FnValue",
    "line": 2,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "0"
  },
  {
    "file": "src/nested_function.rs",
    "function": {
      "function_name": "has_nested::inner",
      "return_type": "-> u32"
    },
    "genre": "FnValue",
    "line": 2,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "1"
  },
  {
    "file": "src/numbers.rs",
    "function": {
      "function_name": "double_float",
      "return_type": "-> f32"
    },
    "genre": "FnValue",
    "line": 1,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "0.0"
  },
  {
    "file": "src/numbers.rs",
    "function": {
      "function_name": "double_float",
      "return_type": "-> f32"
    },
    "genre": "FnValue",
    "line": 1,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "1.0"
  },
  {
    "file": "src/numbers.rs",
    "function": {
      "function_name": "double_float",
      "return_type": "-> f32"
    },
    "genre": "FnValue",
    "line": 1,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "-1.0"
  },
  {
    "file": "src/result.rs",
    "function": {
      "function_name": "simple_result",
      "return_type": "-> Result<&'static str, ()>"
    },
    "genre": "FnValue",
    "line": 5,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Ok(\"\")"
  },
  {
    "file": "src/result.rs",
    "function": {
      "function_name": "simple_result",
      "return_type": "-> Result<&'static str, ()>"
    },
    "genre": "FnValue",
    "line": 5,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Ok(\"xyzzy\")"
  },
  {
    "file": "src/result.rs",
    "function": {
      "function_name": "error_if_negative",
      "return_type": "-> Result<(), ()>"
    },
    "genre": "FnValue",
    "line": 9,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Ok(())"
  },
  {
    "file": "src/result.rs",
    "function": {
      "function_name": "result_with_no_apparent_type_args",
      "return_type": "-> std::fmt::Result"
    },
    "genre": "FnValue",
    "line": 17,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/sets.rs",
    "function": {
      "function_name": "make_a_set",
      "return_type": "-> BTreeSet<String>"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "BTreeSet::new()"
  },
  {
    "file": "src/sets.rs",
    "function": {
      "function_name": "make_a_set",
      "return_type": "-> BTreeSet<String>"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "BTreeSet::from_iter([String::new()])"
  },
  {
    "file": "src/sets.rs",
    "function": {
      "function_name": "make_a_set",
      "return_type": "-> BTreeSet<String>"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "BTreeSet::from_iter([\"xyzzy\".into()])"
  },
  {
    "file": "src/simple_fns.rs",
    "function": {
      "function_name": "returns_unit",
      "return_type": ""
    },
    "genre": "FnValue",
    "line": 7,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "()"
  },
  {
    "file": "src/simple_fns.rs",
    "function": {
      "function_name": "returns_42u32",
      "return_type": "-> u32"
    },
    "genre": "FnValue",
    "line": 12,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "0"
  },
  {
    "file": "src/simple_fns.rs",
    "function": {
      "function_name": "returns_42u32",
      "return_type": "-> u32"
    },
    "genre": "FnValue",
    "line": 12,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "1"
  },
  {
    "file": "src/simple_fns.rs",
    "function": {
      "function_name": "divisible_by_three",
      "return_type": "-> bool"
    },
    "genre": "FnValue",
    "line": 17,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "true"
  },
  {
    "file": "src/simple_fns.rs",
    "function": {
      "function_name": "divisible_by_three",
      "return_type": "-> bool"
    },
    "genre": "FnValue",
    "line": 17,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "false"
  },
  {
    "file": "src/simple_fns.rs",
    "function": {
      "function_name": "double_string",
      "return_type": "-> String"
    },
    "genre": "FnValue",
    "line": 26,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "String::new()"
  },
  {
    "file": "src/simple_fns.rs",
    "function": {
      "function_name": "double_string",
      "return_type": "-> String"
    },
    "genre": "FnValue",
    "line": 26,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "\"xyzzy\".into()"
  },
  {
    "file": "src/slices.rs",
    "function": {
      "function_name": "pad",
      "return_type": "-> &'a[Cow<'static, str>]"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Vec::leak(Vec::new())"
  },
  {
    "file": "src/slices.rs",
    "function": {
      "function_name": "pad",
      "return_type": "-> &'a[Cow<'static, str>]"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Vec::leak(vec![Cow::Borrowed(\"\")])"
  },
  {
    "file": "src/slices.rs",
    "function": {
      "function_name": "pad",
      "return_type": "-> &'a[Cow<'static, str>]"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Vec::leak(vec![Cow::Owned(\"\".to_owned())])"
  },
  {
    "file": "src/slices.rs",
    "function": {
      "function_name": "pad",
      "return_type": "-> &'a[Cow<'static, str>]"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Vec::leak(vec![Cow::Borrowed(\"xyzzy\")])"
  },
  {
    "file": "src/slices.rs",
    "function": {
      "function_name": "pad",
      "return_type": "-> &'a[Cow<'static, str>]"
    },
    "genre": "FnValue",
    "line": 3,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Vec::leak(vec![Cow::Owned(\"xyzzy\".to_owned())])"
  },
  {
    "file": "src/slices.rs",
    "function": {
      "function_name": "return_mut_slice",
      "return_type": "-> &mut[usize]"
    },
    "genre": "FnValue",
    "line": 12,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Vec::leak(Vec::new())"
  },
  {
    "file": "src/slices.rs",
    "function": {
      "function_name": "return_mut_slice",
      "return_type": "-> &mut[usize]"
    },
    "genre": "FnValue",
    "line": 12,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Vec::leak(vec![0])"
  },
  {
    "file": "src/slices.rs",
    "function": {
      "function_name": "return_mut_slice",
      "return_type": "-> &mut[usize]"
    },
    "genre": "FnValue",
    "line": 12,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "Vec::leak(vec![1])"
  },
  {
    "file": "src/struct_with_lifetime.rs",
    "function": {
      "function_name": "Lex<'buf>::buf_len",
      "return_type": "-> usize"
    },
    "genre": "FnValue",
    "line": 14,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "0"
  },
  {
    "file": "src/struct_with_lifetime.rs",
    "function": {
      "function_name": "Lex<'buf>::buf_len",
      "return_type": "-> usize"
    },
    "genre": "FnValue",
    "line": 14,
    "package": "cargo-mutants-testdata-well-tested",
    "replacement": "1"
  }
]
